//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-31833905
// Cuda compilation tools, release 11.8, V11.8.89
// Based on NVVM 7.0.1
//

.version 7.8
.target sm_52
.address_size 64

	// .globl	_Z16test_shf_l_clampPjS_S_S_

.visible .entry _Z16test_shf_l_clampPjS_S_S_(
	.param .u64 _Z16test_shf_l_clampPjS_S_S__param_0,
	.param .u64 _Z16test_shf_l_clampPjS_S_S__param_1,
	.param .u64 _Z16test_shf_l_clampPjS_S_S__param_2,
	.param .u64 _Z16test_shf_l_clampPjS_S_S__param_3
)
{
	.reg .b32 	%r<5>;
	.reg .b64 	%rd<9>;


	ld.param.u64 	%rd1, [_Z16test_shf_l_clampPjS_S_S__param_0];
	ld.param.u64 	%rd2, [_Z16test_shf_l_clampPjS_S_S__param_1];
	ld.param.u64 	%rd3, [_Z16test_shf_l_clampPjS_S_S__param_2];
	ld.param.u64 	%rd4, [_Z16test_shf_l_clampPjS_S_S__param_3];
	cvta.to.global.u64 	%rd5, %rd4;
	cvta.to.global.u64 	%rd6, %rd3;
	cvta.to.global.u64 	%rd7, %rd2;
	cvta.to.global.u64 	%rd8, %rd1;
	ld.global.u32 	%r2, [%rd8];
	ld.global.u32 	%r3, [%rd7];
	ld.global.u32 	%r4, [%rd6];
	// begin inline asm
	shf.l.clamp.b32 %r1, %r2, %r3, %r4;
	// end inline asm
	st.global.u32 	[%rd5], %r1;
	ret;

}
	// .globl	_Z16test_shf_r_clampPjS_S_S_
.visible .entry _Z16test_shf_r_clampPjS_S_S_(
	.param .u64 _Z16test_shf_r_clampPjS_S_S__param_0,
	.param .u64 _Z16test_shf_r_clampPjS_S_S__param_1,
	.param .u64 _Z16test_shf_r_clampPjS_S_S__param_2,
	.param .u64 _Z16test_shf_r_clampPjS_S_S__param_3
)
{
	.reg .b32 	%r<5>;
	.reg .b64 	%rd<9>;


	ld.param.u64 	%rd1, [_Z16test_shf_r_clampPjS_S_S__param_0];
	ld.param.u64 	%rd2, [_Z16test_shf_r_clampPjS_S_S__param_1];
	ld.param.u64 	%rd3, [_Z16test_shf_r_clampPjS_S_S__param_2];
	ld.param.u64 	%rd4, [_Z16test_shf_r_clampPjS_S_S__param_3];
	cvta.to.global.u64 	%rd5, %rd4;
	cvta.to.global.u64 	%rd6, %rd3;
	cvta.to.global.u64 	%rd7, %rd2;
	cvta.to.global.u64 	%rd8, %rd1;
	ld.global.u32 	%r2, [%rd8];
	ld.global.u32 	%r3, [%rd7];
	ld.global.u32 	%r4, [%rd6];
	// begin inline asm
	shf.r.clamp.b32 %r1, %r2, %r3, %r4;
	// end inline asm
	st.global.u32 	[%rd5], %r1;
	ret;

}
	// .globl	_Z15test_shf_l_wrapPjS_S_S_
.visible .entry _Z15test_shf_l_wrapPjS_S_S_(
	.param .u64 _Z15test_shf_l_wrapPjS_S_S__param_0,
	.param .u64 _Z15test_shf_l_wrapPjS_S_S__param_1,
	.param .u64 _Z15test_shf_l_wrapPjS_S_S__param_2,
	.param .u64 _Z15test_shf_l_wrapPjS_S_S__param_3
)
{
	.reg .b32 	%r<5>;
	.reg .b64 	%rd<9>;


	ld.param.u64 	%rd1, [_Z15test_shf_l_wrapPjS_S_S__param_0];
	ld.param.u64 	%rd2, [_Z15test_shf_l_wrapPjS_S_S__param_1];
	ld.param.u64 	%rd3, [_Z15test_shf_l_wrapPjS_S_S__param_2];
	ld.param.u64 	%rd4, [_Z15test_shf_l_wrapPjS_S_S__param_3];
	cvta.to.global.u64 	%rd5, %rd4;
	cvta.to.global.u64 	%rd6, %rd3;
	cvta.to.global.u64 	%rd7, %rd2;
	cvta.to.global.u64 	%rd8, %rd1;
	ld.global.u32 	%r2, [%rd8];
	ld.global.u32 	%r3, [%rd7];
	ld.global.u32 	%r4, [%rd6];
	// begin inline asm
	shf.l.wrap.b32 %r1, %r2, %r3, %r4;
	// end inline asm
	st.global.u32 	[%rd5], %r1;
	ret;

}
	// .globl	_Z15test_shf_r_wrapPjS_S_S_
.visible .entry _Z15test_shf_r_wrapPjS_S_S_(
	.param .u64 _Z15test_shf_r_wrapPjS_S_S__param_0,
	.param .u64 _Z15test_shf_r_wrapPjS_S_S__param_1,
	.param .u64 _Z15test_shf_r_wrapPjS_S_S__param_2,
	.param .u64 _Z15test_shf_r_wrapPjS_S_S__param_3
)
{
	.reg .b32 	%r<5>;
	.reg .b64 	%rd<9>;


	ld.param.u64 	%rd1, [_Z15test_shf_r_wrapPjS_S_S__param_0];
	ld.param.u64 	%rd2, [_Z15test_shf_r_wrapPjS_S_S__param_1];
	ld.param.u64 	%rd3, [_Z15test_shf_r_wrapPjS_S_S__param_2];
	ld.param.u64 	%rd4, [_Z15test_shf_r_wrapPjS_S_S__param_3];
	cvta.to.global.u64 	%rd5, %rd4;
	cvta.to.global.u64 	%rd6, %rd3;
	cvta.to.global.u64 	%rd7, %rd2;
	cvta.to.global.u64 	%rd8, %rd1;
	ld.global.u32 	%r2, [%rd8];
	ld.global.u32 	%r3, [%rd7];
	ld.global.u32 	%r4, [%rd6];
	// begin inline asm
	shf.r.wrap.b32 %r1, %r2, %r3, %r4;
	// end inline asm
	st.global.u32 	[%rd5], %r1;
	ret;

}

